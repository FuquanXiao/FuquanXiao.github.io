{"meta":{"title":"傻瓜|无情","subtitle":"岁月不饶人,我亦未曾饶过岁月","description":"当一天和尚敲一天钟","author":"肖无情","url":"http://my.com","root":"/"},"pages":[{"title":"第一批","date":"2019-10-26T00:43:03.822Z","updated":"2019-10-24T16:11:22.468Z","comments":true,"path":"archives/hello-world.html","permalink":"http://my.com/archives/hello-world.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"},{"title":"第一批","date":"2019-10-26T00:43:01.524Z","updated":"2019-10-24T16:11:22.468Z","comments":true,"path":"categories/hello-world.html","permalink":"http://my.com/categories/hello-world.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"},{"title":"文章分类","date":"2019-10-26T00:32:28.000Z","updated":"2019-10-26T01:16:28.083Z","comments":true,"path":"categories/index.html","permalink":"http://my.com/categories/index.html","excerpt":"","text":"1234"},{"title":"标签","date":"2019-10-26T00:32:28.000Z","updated":"2019-10-26T01:20:37.077Z","comments":true,"path":"tags/index.html","permalink":"http://my.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"设计模式之工厂模式","slug":"设计模式之工厂模式","date":"2019-10-29T15:32:46.000Z","updated":"2019-10-29T15:38:35.129Z","comments":false,"path":"2019/10/29/设计模式之工厂模式/","link":"","permalink":"http://my.com/2019/10/29/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/","excerpt":"","text":"","categories":[{"name":"设计模式","slug":"设计模式","permalink":"http://my.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}],"tags":[{"name":"设计模式","slug":"设计模式","permalink":"http://my.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"}]},{"title":"静态变量和全局变化","slug":"静态变量和全局变化","date":"2019-10-26T11:01:37.000Z","updated":"2019-10-26T11:07:10.308Z","comments":false,"path":"2019/10/26/静态变量和全局变化/","link":"","permalink":"http://my.com/2019/10/26/%E9%9D%99%E6%80%81%E5%8F%98%E9%87%8F%E5%92%8C%E5%85%A8%E5%B1%80%E5%8F%98%E5%8C%96/","excerpt":"","text":"#位置一 12345678位置1：NSInteger cellHeight = 100;@interface MMMMPeople : NSObject位置2：NSInteger cellHeight = 100;@end位置3：NSInteger cellHeight = 100; 位置二报错：Cannot declare variable inside @interface or @protocol```123.m中同样 （略） 位置1：NSInteger cellHeight = 100;@interface ViewController ()位置2：NSInteger cellHeight = 100;@end位置3：NSInteger cellHeight = 100; @implementation ViewController位置4：NSInteger cellHeight = 100; (void)functionA { }位置5：NSInteger cellHeight = 100; 1```位置2 报错：Cannot declare variable inside @interface or @protocol ######同一个工程中，两个不同 .m 文件中同样的全局变量不能同时存在，因为这样在编译或运行的时候，编译器分不清是哪个全局变量，所以我们千万不能同时在同一个工程中定义同样的全局变量！ 如果我就是想用另一个 .m 文件中的全局变量，那怎么处理呢？很简单，使用关键字 extern 修饰使用的全局变量就好了， 123456789extern NSInteger CellHeight;打印结果：0。因为当没有初始化的时候系统默认：零。 注：如果在MMMMPeople中初始化了数据，比如NSInteger CellHeight = 100；则打印结果就为100，但是在ViewController中就不能再次初始化！！！否则编译报错同上！！！#&apos;extern&apos; variable has an initializer#但是可以全局修改 cellHeight = 300; NSLog(@&quot;cellHeight ===== %ld&quot;,(long)cellHeight); -----&gt;300 静态全局变量同样不能在 2的位置声明 否则位置2 报错：Cannot declare variable inside @interface or @protocol extern想使用它，但还是不行的，静态全局变量只能在本文件中使用 #全局变量与全局静态变量的区别： (a）若程序由一个源文件构成时，全局变量与全局静态变量没有区别。(b)若程序由多个源文件构成时，全局变量与全局静态变量不同：全局静态变量使得该变量成为定义该变量的源文件所独享，即：全局静态变量对组成该程序的其它源文件是无效的 ,全局变量可以通过：extern。(c)具有外部链接（#import 会把变量和方法全部导入过去如果A中#import “B” B 中有static aa 那A中已经有了static aa 如果A修改aa其实修改的就是B中的aa）的静态；可以在所有源文件里调用并修改! 全局变量除了本文件，其他文件可以通过extern的方式引用；比如：在.h中声明了 且导入了头文件 在.m中声明了 且导入了头文件 (d)静态（static）不能使用 extern并存，(e)可以虽然不报错，但是违背了static 的初衷 ？static的左右就是在文件内部使用 来源 https://blog.csdn.net/mango_ios/article/details/52686892","categories":[{"name":"基础","slug":"基础","permalink":"http://my.com/categories/%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"编程基础","slug":"编程基础","permalink":"http://my.com/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"}]},{"title":"第一批","slug":"hello-world","date":"2019-10-22T17:36:27.715Z","updated":"2019-10-24T16:11:22.468Z","comments":true,"path":"2019/10/23/hello-world/","link":"","permalink":"http://my.com/2019/10/23/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}